security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\CortestUser
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            logout:
                path: logout
            form_login:
                login_path: login
                check_path: login
            access_denied_handler: App\CortestAccessDeniedListener

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMINISTRATEUR }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/logout, roles: PUBLIC_ACCESS }
        - { path: ^/session, roles: ROLE_CORRECTEUR }
        - { path: ^/lecture, roles: ROLE_CORRECTEUR }
        - { path: ^/recherche, roles: ROLE_CORRECTEUR }
        - { path: ^/$, roles: ROLE_CORRECTEUR }
        - { path: ^/, roles: ROLE_PSYCHOLOGUE }

    role_hierarchy:
        ROLE_ADMINISTRATEUR: ROLE_PSYCHOLOGUE
        ROLE_PSYCHOLOGUE: ROLE_CORRECTEUR

when@dev:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'plaintext'

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'plaintext'
